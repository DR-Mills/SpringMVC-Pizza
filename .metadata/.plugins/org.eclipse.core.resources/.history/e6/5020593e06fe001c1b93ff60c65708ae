package co.grandcircus.springlab;

import java.text.DecimalFormat;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

@Controller
public class HomeController {

	@RequestMapping("/")
	public String showIndex() {
		return "index";
	}
	
	@RequestMapping("/reviewform")
	public String showReviewForm() {
		return "reviewform";
	}
	
	@PostMapping("/reviewform")
	public String submitReviewForm(
			@RequestParam String rating,
			@RequestParam String name,
			@RequestParam String review,
			Model model) {
		model.addAttribute("starRating", rating);
		model.addAttribute("name", name);
		model.addAttribute("reviewText", review);
		return "reviewconfirm";
	}
	
	@RequestMapping("/specialtypizza")
	public String showSpecialtyPizza(
			@RequestParam String name,
			@RequestParam String price,
			Model model) {
		model.addAttribute("name", name);
		model.addAttribute("price", price);
		
		return "displayspecialtypizza";
	}
	
	@RequestMapping("/pizzabuilder")
	public String showPizzaBuilder() {
		return "pizzabuilder";		
	}
	
	@PostMapping("/pizzabuilder")
	public String submitPizzaBuilderForm(
			@RequestParam String size,
			@RequestParam int toppingCount,
			@RequestParam String glutenFree,
			@RequestParam String specialInstructions,
			Model model) {
		final DecimalFormat df = new DecimalFormat("0.00");
		double sizePrice = (size.equals("Small") ? 7.00 : (size.equals("Medium")? 10.00 : 12.00));
		double toppingsPrice = (size.equals("Small") ? toppingCount * .5 : (size.equals("Medium")? toppingCount * 1.00 : toppingCount * 1.25));
		double glutenFreePrice = (glutenFree? 2.00 : 0.00);
		model.addAttribute("price", df.format(sizePrice + toppingsPrice + glutenFreePrice));
		model.addAttribute("toppingCount", toppingCount);
		model.addAttribute("glutenFree", glutenFree);
		model.addAttribute("specialInstructions", specialInstructions);
		model.addAttribute("size", size);
		
		return "pizzaBuilderResult";
	}
	
}
